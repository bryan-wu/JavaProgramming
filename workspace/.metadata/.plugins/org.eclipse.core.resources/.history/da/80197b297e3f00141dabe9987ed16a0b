import kareltherobot.*;


/**
 * Object class for SorterBot.
 *
 * @author Bryan Wu
 * @version Sep 18, 2014
 * @author Period: 7
 * @author Assignment: ch6_25SorterBot
 *
 * @author Sources: none
 */
public class SorterBot extends SmartBot
{
    /**
     * Default SmartBot constructor.
     * 
     * @param st
     *            initial street
     * @param av
     *            initial avenue
     * @param dir
     *            direction this robot is facing
     * @param numBeepers
     *            number of beepers this robot has in its beeper bag
     */
    public SorterBot( int st, int av, Direction dir, int numBeepers )
    {
        super( st, av, dir, numBeepers );
    }


    /**
     * Sort columns for lowest to highest.
     */
    public void sortThemAll()
    {
        goToEndOfRow();
        moveToNextUnfinishedRow();
        clearRow();
        goToOrigin();
        goToEndOfRow();
        returnToClearedRow();
    }

    /**
     * Return to Origin.
     */
    public void goToOrigin()
    {
        while (frontIsClear()) // check
        {
            move();
        }
        faceSouth();
        while (frontIsClear())
        {
            move();
        }
        faceEast();
    }
    
    /**
     * Pick up all the beepers in the row.
     */
    public void clearRow()
    {
        while (frontIsClear())
        {
            while (nextToABeeper())
            {
                pickBeeper();
            }
            move();
        }
        while (nextToABeeper())
        {
            pickBeeper();
        }
    }
    
    /**
     * TODO Write your method description here.
     */
    public void returnToClearedRow()
    {
        while (nextToABeeper())
        {
            move();
        }
        turnLeft();
    }
    
    /**
     * TODO Write your method description here.
     */
    public void sortRow()
    {
        while (frontIsClear())
        {
            while (anyBeepersInBeeperBag())
            {
                putBeeper();
            }
            move();
        }

    }
    
    /**
     * Move to the end of the row.
     */
    public void goToEndOfRow()
    {
        while (nextToABeeper())
        {
            move();
        }
        turnAround();
        move();
        turnRight();
    }
    
    /**
     * Move to the next unfinished row and face West.
     */
    public void moveToNextUnfinishedRow()
    {
        move();
        turnLeft();
    }
}