import java.awt.*;


/**
 * This applet draws a red-and-black checkerboard. It is assumed that the size
 * of the applet is 160 by 160 pixels. This checkboard will slide.
 * 
 * @author Bryan Wu
 * @version 12/9/14
 * @author Period - 7
 * @author Assignment - Ch41_forGraphics
 * @author Sources - none
 */
public class SlidingCheckerboard extends AnimationBase
{
    /**
     * This routine is called by the system when the applet is first created.
     */
    public void init()
    {
        setMillisecondsPerFrame( 1 );
    }


    public void drawFrame( Graphics g )
    {
        super.drawFrame( g );

        int row, col;
        int x, y;
        y = 0;
        int offset, leftEdge;
        offset = getFrameNumber() % 40;

        for ( row = 0; row < 8; row++ )
        {
            x = 0;

            for ( col = 0; col < 12; col++ )
            {
                if ( row % 2 == col % 2 )
                {
                    g.setColor( new Color( (int)( Math.random() * 256 ),
                        (int)( Math.random() * 256 ),
                        (int)( Math.random() * 256 ) ) );
                }
                else
                {
                    g.setColor( new Color( (int)( Math.random() * 256 ),
                        (int)( Math.random() * 256 ),
                        (int)( Math.random() * 256 ) ) );
                }
                if ( row % 2 == 0 )
                {
                    leftEdge = -40 - offset;
                }
                else
                {
                    leftEdge = -40 + offset;
                }
                g.fillRect( leftEdge + x, y, 20, 20 );
                x = x + 20;
            }
            y = y + 20;
        }
        // for each row on the checkerboard:
        // for each of the eight columns:
        // Compute x,y for the top-left corner of the square
        // if its a red square:
        // g.setColor(Color.red)
        // else
        // g.setColor(Color.black)
        // g.fillRect(x,y,20,20)
    }
}
