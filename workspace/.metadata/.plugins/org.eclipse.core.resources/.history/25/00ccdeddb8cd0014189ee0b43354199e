import javax.swing.*;
import java.awt.*;
import java.lang.Math;


/**
 * Recursion with Graphics
 * 
 * @author Bryan Wu
 * @version 3/18/15
 * @author Period: 7
 * @author Assignment: Ch74 Exercise 1 - Snowflake
 * @author Sources: none
 */
class FlakePanel extends JPanel
{
    private Graphics graph;


    public FlakePanel()
    {
        setBackground( Color.white );
    }


    private void drawStar( int x, int y, int size, int colorCount )
    {
        // TODO Complete recursive method
    }


    public void paintComponent( Graphics gr )
    {
        super.paintComponent( gr );

        graph = gr;
        int width = getSize().width;
        int height = getSize().height;
        int min;

        // setBackground( Color.white );
        gr.setColor( Color.blue );

        if ( height < width )
            min = height;
        else
            min = width;

        drawStar( width / 2, height / 2, min / 3, 0 );
    }
}


public class SnowFlake extends JApplet
{
    // This simple init() method just creates a drawing surface
    // belonging to the nested class FlakePanel and uses it for
    // the content pane of the JApplet. (This is one case where
    // it is rather silly to use a JApplet rather than a plain
    // old Applet!)
    public void init()
    {
        setContentPane( new FlakePanel() );
    }
}
