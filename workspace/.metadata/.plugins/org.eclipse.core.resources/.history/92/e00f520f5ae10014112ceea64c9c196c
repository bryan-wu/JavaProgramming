import java.io.*;
import java.util.InputMismatchException;
import java.util.Scanner;


/**
 * Chapter 80 - Exceptions and Errors Exercises 1-2.
 * 
 * @author Bryan Wu
 * @version 4/12/15
 * @author Period - 7
 * @author Assignment - Ch80Exercises
 * @author Sources - None
 */
public class Ch80Exercises
{
    Scanner scan;

    Scanner inFile;


    /**
     * Constructs a Scanner for input from the console and from a default file
     */
    public Ch80Exercises()
    {
        scan = new Scanner( System.in );
    }


    /**
     * Constructs a Scanner to evaluate passed input (used for testing).
     * 
     * @param kbd
     *            console input for the various methods
     * @param file
     *            simulated file input
     */
    public Ch80Exercises( String kbd, String file )
    {
        scan = new Scanner( kbd );
        inFile = new Scanner( file );
    }


    /**
     * Enhanced DivisionPractice program from the chapter.
     */
    public void divisionPractice()
    {

        int num = 0, div = 0;
        boolean goodData = false;
        String data = "";
        char quit = 0;

        while ( !goodData )
        {
            try
            {
                System.out.println( "Enter the numerator: " );
                num = scan.nextInt();
                data = scan.next();

                // turn entered data into a char
                quit = data.charAt( 0 );

                System.out.println( quit );
                // num = Integer.parseInt( test );

                System.out.println( "Enter the divisor  : " );
                div = scan.nextInt();
                System.out.println( num + " / " + div + " is " + ( num / div )
                    + " rem " + ( num % div ) );
            }

            catch ( NumberFormatException ex )
            {

                // test if quit command is entered
                if ( Character.toLowerCase( quit ) == 'q' )
                {
                    goodData = true;
                }
                else
                {
                    System.out.println( "You entered bad data." );
                    System.out.println( "Run the program again." );

                }

            }

            catch ( InputMismatchException ex )
            {
                // test if quit command is entered
                if ( Character.toLowerCase( quit ) == 'q' )
                {
                    goodData = true;
                }
                else
                {
                    System.out.println( "You entered bad data." );
                    System.out.println( "Run the program again." );
                    System.out.println( "problemhere" );
                }

            }

            catch ( ArithmeticException ex )
            {
                System.out.println( "You can't divide " + num + " by " + div );
            }

        }

    }


    /**
     * The program outputs the sum of the numbers in each group. Each group
     * starts with a one-line descriptive phrase. The phrase can be anything
     * that is not a number. The numbers can be integers or floating point
     * values. Some groups may have no numbers in them. Prompt the user for the
     * name of the input data file.
     * 
     * @throws IOException
     */
    public void multiGroupAddition() throws IOException
    {
        int num = 0;
        int sum = 0;
        String group = "";

        // Prompt for and open the input file
        System.out.print( "Please enter the file name: " );
        String fileName = scan.nextLine().trim();
        if ( fileName.length() <= 0 )
        {
            fileName = "Ex2DataSet1.txt";
        }

        inFile = new Scanner( new File( fileName ) );

        try
        {
            while ( inFile.hasNext() )
            {
                if ( inFile.hasNextLine() )
                {
                    num = inFile.nextInt();
                    sum = sum + num;
                    while ( inFile.hasNextInt() )
                    {
                        num = inFile.nextInt();
                        sum = sum + num;
                    }
                }
            }

        }
        catch ( InputMismatchException ex )
        {
            group = scan.nextLine();
        }

        // while breakdown below
        // while ( inFile.hasNext() )
        // {
        // if ( inFile.hasNextLine() )
        // {
        //
        // if ( inFile.hasNextInt() ) // testing the waters
        // {
        // num = inFile.nextInt();
        // sum = sum + num;
        // while ( inFile.hasNextInt() )
        // {
        // num = inFile.nextInt();
        // sum = sum + num;
        // }
        //
        // }
        // else
        // {
        // group = inFile.nextLine();
        // }
        // System.out.println( group );
        // System.out.println( "Sum = " + sum );
        // System.out.println( "" );
        // }
        // }
        inFile.close();
    }


    /**
     * Testing method: instantiates a Ch24Exercises object and then invokes each
     * method.
     * 
     * @param args
     *            command line parameters (not used)
     */
    public static void main( String[] args ) throws IOException
    {
        Scanner kbd = new Scanner( System.in );
        boolean done = false;

        Ch80Exercises exercise = new Ch80Exercises();

        do
        {
            System.out.println();
            System.out.println();
            System.out.println( "Make a selection" );
            System.out.println();
            System.out.println( "   (1) User-Friendly Division Practice" );
            System.out.println( "   (2) Addition of Multiple Groups" );
            System.out.println( "   (Q) Quit" );
            System.out.println();
            System.out.print( "Enter a choice:  " );
            String response = kbd.nextLine();

            if ( response.length() > 0 )
            {
                System.out.println();

                switch ( response.charAt( 0 ) )
                {
                    case '1':
                        exercise.divisionPractice();
                        break;
                    case '2':
                        exercise.multiGroupAddition();
                        break;
                    default:
                        if ( response.toLowerCase().charAt( 0 ) == 'q' )
                        {
                            done = true;
                        }
                        else
                        {
                            System.out.print( "Invalid Choice" );
                        }
                        break;
                }
            }
        } while ( !done );

        System.out.println( "Goodbye!" );
    }
}
