import javax.swing.*;

import java.awt.*;
import java.lang.Math;


/**
 * Recursion with Graphics
 * 
 * @author Bryan Wu
 * @version 3/18/15
 * @author Period: 7
 * @author Assignment: Ch74 Exercise 1 - Snowflake
 * @author Sources: none
 */
class FlakePanel extends JPanel
{
    /**
     * Graphics graph
     */
    private Graphics graph;


    /**
     * Flake Panel
     */
    public FlakePanel()
    {
        setBackground( Color.white );
    }


    /**
     * Draw base star of snowflake.
     * 
     * @param x
     *            x com
     * @param y
     *            y com
     * @param size
     *            size
     * @param colorCount
     *            color number
     */
    private void drawStar( int x, int y, int size, int colorCount )
    {
        Color[] colorArray = { new Color( 0, 0, 255 ), new Color( 0, 60, 255 ),
            new Color( 0, 125, 255 ), new Color( 0, 204, 255 ) };
        // Array of colors that gradually becomes pastel blue.

        int endX, endY;

        if ( size <= 2 )
            return;
        // Six lines radiating from (x,y)
        for ( int i = 0; i < 6; i++ )
        {
            endX = x + (int)( size * Math.cos( ( 2 * Math.PI / 6 ) * i ) );
            endY = y - (int)( size * Math.sin( ( 2 * Math.PI / 6 ) * i ) );
            graph.setColor( colorArray[colorCount % colorArray.length] );
            graph.drawLine( x, y, endX, endY );
            drawStar( endX, endY, size / 3, colorCount + 1 );
            // The array of colors uses parameter colorCount as its index. It
            // will cycle through the colors using mod.
        }
    }


    public void paintComponent( Graphics gr )
    {
        super.paintComponent( gr );

        graph = gr;
        int width = getSize().width;
        int height = getSize().height;
        int min;

        // setBackground( Color.white );
        gr.setColor( Color.blue );

        if ( height < width )
            min = height;
        else
            min = width;

        drawStar( width / 2, height / 2, min / 3, 0 );
    }
}


public class SnowFlake extends JApplet
{
    // This simple init() method just creates a drawing surface
    // belonging to the nested class FlakePanel and uses it for
    // the content pane of the JApplet. (This is one case where
    // it is rather silly to use a JApplet rather than a plain
    // old Applet!)
    public void init()
    {
        setContentPane( new FlakePanel() );
    }
}
